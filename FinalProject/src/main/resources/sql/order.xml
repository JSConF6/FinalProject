<?xml version="1.0" encoding="UTF-8"?><!--  SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="Orders">
 
 	<select id="count" resultType="int">
 		select count(*)
 		from order_market
 	</select>
 	
 	<select id="list" resultType="order" parameterType="map">
 		select *
		from (select rownum rnum, o.*
	  		  from (select *
	  				from order_market
	  				order by order_date) o
	 		 )
		where rnum &gt;= #{start} and rnum &lt;= #{end}
 	</select>
 	
 	<select id="searchList" resultType="order" parameterType="map">
		select *
		from (select rownum rnum, o.*
			  from (select *
			  		from order_market
			  		where order_num like #{word}
			  		order by order_date) o
			 )
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="searchListCount" resultType="int" parameterType="String">
		select count(*)
		from order_market
		where order_num like #{word}
	</select>
	
	<select id="detail" resultType="orderDetail" parameterType="String">
		select order_num, id, order_name, user_address1, user_address2,
	   		   order_phone, order_totalprice, order_payment, order_date,
	   	 	   order_delivery
		from order_market
		where order_num = #{order_num}
	</select>
	
	<select id="detailList" resultType="orderList" parameterType="String">
		select o.order_num, o.id, o.order_name, o.user_address1, o.user_address2,
	   		   o.order_phone, o.order_totalprice, o.order_payment, o.order_date,
	   		   o.order_delivery, d.order_de_num, d.product_code, d.order_de_count,
	   		   p.product_name, p.product_img, p.product_price
		from order_market o 
			   inner join order_detail d
					on o.order_num = d.order_num
			   inner join PRODUCT p
					on d.product_code = p.product_code
		where o.order_num = #{order_num}
	</select>
	
	<update id="deliveryUpdate" parameterType="map">
		update order_market
		set order_delivery = #{deliveryStatus}
		where order_num = #{order_num}
	</update>
	
	<select id="userOrderList" resultType="order" parameterType="map">
		select *
		from (select rownum rnum, o.*
			  from (select *
			  		from order_market
			  		where id = #{id}
			  		order by order_date) o
			 )
		where rnum &gt;= #{start} and rnum &lt;= #{end}
	</select>
	
	<select id="userOrederListCount" resultType="int" parameterType="String">
		select count(*)
 		from order_market
 		where id = #{id} 
	</select>
	
	<select id="userDetail" resultType="orderDetail" parameterType="String">
		select order_num, id, order_name, user_address1, user_address2,
	   		   order_phone, order_totalprice, order_payment, order_date,
	   	 	   order_delivery
		from order_market
		where order_num = #{order_num}
		and id = #{id}
	</select>
	
	<select id="userDetailList" resultType="orderList" parameterType="String">
		select o.order_num, o.id, o.order_name, o.user_address1, o.user_address2,
	   		   o.order_phone, o.order_totalprice, o.order_payment, o.order_date,
	   		   o.order_delivery, d.order_de_num, d.product_code, d.order_de_count,
	   		   p.product_name, p.product_img, p.product_price
		from order_market o 
			   inner join order_detail d
					on o.order_num = d.order_num
			   inner join PRODUCT p
					on d.product_code = p.product_code
		where o.order_num = #{order_num}
		and id = #{id}
	</select>
	
	<insert id="insert" parameterType="order">
		insert into order_market
		values(#{order_num}, #{id}, #{order_name}, #{user_address1}, #{user_address2},
			   #{order_phone}, #{order_totalprice}, #{order_payment}, sysdate, '배송준비')
	</insert>
	
	<insert id="orderDetailInsert" parameterType="map">
		insert into order_detail
			(order_de_num, order_num, product_code, order_de_count)
		select order_detail_seq.nextval, #{order.order_num}, product_code, order_de_count
		from cart
		where id = #{order.id}
		and cart_num in 
		<foreach item="item" collection="arr" 
				 open="(" separator="," close=")">
			#{item}
		</foreach>
	</insert>
 	
 </mapper>